#!/usr/bin/env python

# Distributes astrolab, general, modern, internet images and logs
# from $telhome/user(images/logs) to appropriate directories
# Also moves images older than $age from $telhome/user/images to archive dir

# 06 Nov 2002 RLM/KMI - new renaming scheme; easier to move between Rigel/IRO
# 06 Oct 2003 RLm/KMI - removed TELCODE and verified paths for Fall03
# 3.2: 2005 May 09 RLM - add script: OBJCTRA, OBJCTDEC keywords for Maxim/DL astrometry
# Change age to 14 days; fix rewriting all days RLM 5 Dec 07
# Add s group 2011 OCt 17 RLM
# 13 Feb 2023 WWG - modify for chronos support
# 26 Feb 2023 BMP - port to Python, copy/delete images in fromdir older than X days

import astropy.io.fits as pyfits
from os import umask
from pathlib import Path
from subprocess import run, check_output
from datetime import datetime as dt

umask(0o002)

TELGRP = 'talon'
HOSTNAME = 'chronos'
fromdir = Path('/usr/local/telescope/user')
todir = Path('/mnt/imagesbucket')
maxdays = 7

# image prefixes and group names
groups = dict(m='macalester',
              a='augustana',
              c='coe',
              k='knox',
              i='iowa',
              x='external')

# Make sure we are newgrp'ed to the correct group
currentgroup = check_output('id -gn', shell=True, text=True).strip()
if (currentgroup != TELGRP):
    print(f"You are currently in group {currentgroup}. Please newgrp {TELGRP}, then rerun")
    exit

# Make sure we are running from correct system
currenthost = check_output('uname -n', shell=True, text=True).strip()
if (currenthost != HOSTNAME):
    print(f"You are logged into {currenthost}. Please run only from {HOSTNAME}")
    exit

current_day = dt.utcnow().timetuple().tm_yday

# Distribute images
n=0
for img in (fromdir / 'images').glob('*.ft[sh]'):
    try:
        yr_obs = pyfits.getval(Path(img), 'DATE-OBS')[:4]
    except OSError as e:
        print(f"Corrupt FITS file error: {str(e)}")
        continue
    obs_code = img.name[0:3]
    day_code = img.name[3:6]
    groupdir = groups.get(obs_code[0], 'other')
    target = Path(todir, groupdir, obs_code, yr_obs, day_code, img.name)

    # create the image directory and its parents if needed
    if not target.parent.exists():
        target.parent.mkdir(mode=0o775, parents=True)
        print("Created directory", target.parent)

    # copy the image if target doesn't exist or is older
    x = run(['cp', '-u', img, target], encoding='ascii', stdout=PIPE, stderr=STDOUT)
    if not target.exists():
        print(f"Failed to copy {img.name}: {x.stdout}")
        continue
    print(f"Copied {img.name} -> {target}")

    # delete the image if it's older than maxdays
    day_nr = int(day_code)
    if (current_day < day_nr): day_nr -= 365
    if (current_day - day_nr > maxdays):
        img.unlink()
        print(f"Deleted {img}")
    n+=1
print(f"Copied {n} images")

# Copy logs (is this still needed?)
for logfile in (fromdir / 'logs').glob('*.log'):
    run(['cp', '-u', logfile, Path(todir, 'logs')])
